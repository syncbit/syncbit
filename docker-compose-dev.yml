version: "3.2"
services:
    reverse-proxy:
        restart: always
        build:
            dockerfile: Dockerfile.dev
            context: ./reverse-proxy
        ports:
            - "3050:80"
        networks:
            - app-network
        hostname: reverse-proxy
        container_name: synctune_reverse_proxy
        depends_on:
            - "room-server"
            - "client"
    room-server:
        build:
            dockerfile: Dockerfile.dev
            context: ./room-server
        volumes:
            - /app/node_modules
            - ./room-server:/app
        environment:
            - SOCKET_IO_PATH=socket.io
        networks:
            - app-network
        hostname: room-server
        container_name: synctune_room_server
        ports:
            - 5000:5000
    client:
        build:
            dockerfile: Dockerfile.dev
            context: ./client
        volumes:
            - /app/node_modules
            - ./client:/app
        environment:
            - CHOKIDAR_USEPOLLING=true
            - VUE_APP_ROOM_SERVER_URL=/room-server
            - VUE_APP_PEERJS_HOST=0.peerjs.com
            - VUE_APP_PEERJS_PATH=/
            - VUE_APP_PEERJS_PORT=443
        networks:
            - app-network
        hostname: client
        container_name: synctune_client
    redis:
        image: redis
        networks:
            - app-network
        ports:
            - 6379:6379
    redis-commander:
        container_name: redis-commander
        hostname: redis-commander
        image: rediscommander/redis-commander:latest
        restart: always
        environment:
            - REDIS_HOSTS=local:redis:6379
        ports:
            - "8081:8081"
        networks:
            - app-network
networks:
    app-network:
